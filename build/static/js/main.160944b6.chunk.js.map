{"version":3,"sources":["components/common/Header.js","appDispatcher.js","actions/actionTypes.js","stores/courseStore.js","components/CourseList.js","api/apiUtils.js","api/courseApi.js","actions/courseActions.js","components/CoursesPage.js","api/authorApi.js","components/AuthorPage.js","components/App.js","index.js"],"names":["Header","activeStyle","color","react_default","a","createElement","style","height","marginBottom","padding","background","react_router_dom","to","dispatcher","Dispatcher","actionTypes","CREATE_COURSE","UPDATE_COURSE","DELETE_COURSE","LOAD_COURSES","_courses","store","callback","this","on","removeListener","emit","slug","find","course","EventEmitter","register","action","actionType","filter","id","parseInt","emitChange","push","map","courses","CourseList","props","className","key","onClick","deleteCourse","title","authorId","category","handleResponse","_x","_handleResponse","apply","arguments","_callee","response","error","regenerator_default","wrap","_context","prev","next","ok","abrupt","json","status","text","sent","Error","stop","handleError","console","baseUrl","process","REACT_APP_API_URL","loadCourses","fetch","then","catch","dispatch","courseId","method","CoursesPage","_useState","useState","courseStore","getCourses","_useState2","Object","slicedToArray","setCourses","onChange","useEffect","addChangeListener","length","removeChangeListener","Fragment","components_CourseList","AuthorPage","authors","setAuthors","data","name","App","react_toastify","autoClose","hideProgressBar","common_Header","react_router","path","exact","component","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.160944b6.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nfunction Header() {\n  const activeStyle = { color: \"orange\" };\n  return (\n    <nav style={{height:  50, marginBottom: 60, padding: 10, background: \"#D3D3D3\" }}>\n      <NavLink activeStyle={activeStyle} to=\"/courses\">\n        Courses\n      </NavLink>\n      {\" | \"}\n      <NavLink activeStyle={activeStyle} to=\"/authors\">\n        Authors\n      </NavLink>\n    </nav>\n  );\n}\n\nexport default Header;\n","import { Dispatcher } from \"flux\";\nconst dispatcher = new Dispatcher();\nexport default dispatcher;\n","export default {\n  CREATE_COURSE: \"CREATE_COURSE\",\n  UPDATE_COURSE: \"UPDATE_COURSE\",\n  DELETE_COURSE: \"DELETE_COURSE\",\n  LOAD_COURSES: \"LOAD_COURSES\"\n};\n","import { EventEmitter } from \"events\";\nimport Dispatcher from \"../appDispatcher\";\nimport actionTypes from \"../actions/actionTypes\";\n\nconst CHANGE_EVENT = \"change\";\nlet _courses = [];\n\nclass CourseStore extends EventEmitter {\n  addChangeListener(callback) {\n    this.on(CHANGE_EVENT, callback);\n  }\n\n  removeChangeListener(callback) {\n    this.removeListener(CHANGE_EVENT, callback);\n  }\n\n  emitChange() {\n    this.emit(CHANGE_EVENT);\n  }\n\n  getCourses() {\n    return _courses;\n  }\n\n  getCourseBySlug(slug) {\n    return _courses.find(course => course.slug === slug);\n  }\n}\n\nconst store = new CourseStore();\n\nDispatcher.register(action => {\n  switch (action.actionType) {\n    case actionTypes.DELETE_COURSE:\n      _courses = _courses.filter(\n        course => course.id !== parseInt(action.id, 10)\n      );\n      store.emitChange();\n      break;\n    case actionTypes.CREATE_COURSE:\n      _courses.push(action.course);\n      store.emitChange();\n      break;\n    case actionTypes.UPDATE_COURSE:\n      _courses = _courses.map(course =>\n        course.id === action.course.id ? action.course : course\n      );\n      store.emitChange();\n      break;\n    case actionTypes.LOAD_COURSES:\n      _courses = action.courses;\n      store.emitChange();\n      break;\n    default:\n    // nothing to do here\n  }\n});\n\nexport default store;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nfunction CourseList(props) {\n  return (\n    <table className=\"table\">\n      <thead>\n        <tr>\n          <th>&nbsp;</th>\n          <th>Title</th>\n          <th>Author ID</th>\n          <th>Category</th>\n        </tr>\n      </thead>\n      <tbody>\n        {props.courses.map(course => {\n          return (\n            <tr key={course.id}>\n              <td>\n                <button\n                  className=\"btn btn-outline-danger\"\n                  onClick={() => {\n                    props.deleteCourse(course.id);\n                  }}\n                >\n                  Delete\n                </button>\n              </td>\n              <td>\n                <Link to={\"/course/\" + course.slug}>{course.title}</Link>\n              </td>\n              <td>{course.authorId}</td>\n              <td>{course.category}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n}\n\nCourseList.propTypes = {\n  deleteCourse: PropTypes.func.isRequired,\n  courses: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      authorId: PropTypes.number.isRequired,\n      category: PropTypes.string.isRequired\n    })\n  ).isRequired\n};\n\nexport default CourseList;\n","export async function handleResponse(response) {\n  if (response.ok) return response.json();\n  if (response.status === 400) {\n    // So, a server-side validation error occurred.\n    // Server side validation returns a string error message, so parse as text instead of json.\n    const error = await response.text();\n    throw new Error(error);\n  }\n  throw new Error(\"Network response was not ok.\");\n}\n\n// In a real app, would likely call an error logging service.\nexport function handleError(error) {\n  // eslint-disable-next-line no-console\n  console.error(\"API call failed. \" + error);\n  throw error;\n}\n","import { handleResponse, handleError } from \"./apiUtils\";\nconst baseUrl = process.env.REACT_APP_API_URL + \"/courses.json\";\n\nexport function getCourses() {\n  return fetch(baseUrl)\n    .then(handleResponse)\n    .catch(handleError);\n}\n\nexport function getCourseBySlug(slug) {\n  return fetch(baseUrl + \"?slug=\" + slug)\n    .then(response => {\n      if (!response.ok) throw new Error(\"Network response was not ok.\");\n      return response.json().then(courses => {\n        if (courses.length !== 1) throw new Error(\"Course not found: \" + slug);\n        return courses[0]; // should only find one course for a given slug, so return it.\n      });\n    })\n    .catch(handleError);\n}\n\nexport function saveCourse(course) {\n  return fetch(baseUrl + (course.id || \"\"), {\n    method: course.id ? \"PUT\" : \"POST\", // POST for create, PUT to update when id already exists.\n    headers: { \"content-type\": \"application/json\" },\n    body: JSON.stringify({\n      ...course,\n      // Parse authorId to a number (in case it was sent as a string).\n      authorId: parseInt(course.authorId, 10)\n    })\n  })\n    .then(handleResponse)\n    .catch(handleError);\n}\n\nexport function deleteCourse(courseId) {\n  return fetch(baseUrl + courseId, { method: \"DELETE\" })\n    .then(handleResponse)\n    .catch(handleError);\n}\n","import dispatcher from \"../appDispatcher\";\nimport * as courseApi from \"../api/courseApi\";\nimport actionTypes from \"./actionTypes\";\n\nexport function saveCourse(course) {\n  return courseApi.saveCourse(course).then(savedCourse => {\n    // Hey dispatcher, go tell all the stores that a course was just created.\n    dispatcher.dispatch({\n      actionType: course.id\n        ? actionTypes.UPDATE_COURSE\n        : actionTypes.CREATE_COURSE,\n      course: savedCourse\n    });\n  });\n}\n\nexport function loadCourses() {\n  return courseApi.getCourses().then(courses => {\n    dispatcher.dispatch({\n      actionType: actionTypes.LOAD_COURSES,\n      courses: courses\n    });\n  });\n}\n\nexport function deleteCourse(id) {\n  return courseApi.deleteCourse(id).then(() => {\n    dispatcher.dispatch({\n      actionType: actionTypes.DELETE_COURSE,\n      id: id\n    });\n  });\n}\n","import React, { useState, useEffect } from \"react\";\nimport courseStore from \"../stores/courseStore\";\nimport CourseList from \"./CourseList\";\nimport { Link } from \"react-router-dom\";\nimport { loadCourses, deleteCourse } from \"../actions/courseActions\";\n\nfunction CoursesPage() {\n  const [courses, setCourses] = useState(courseStore.getCourses());\n\n  useEffect(() => {\n    courseStore.addChangeListener(onChange);\n    if (courseStore.getCourses.length === 0) loadCourses();\n    return () => courseStore.removeChangeListener(onChange); // cleanup on unmount\n  }, []);\n\n  function onChange() {\n    setCourses(courseStore.getCourses());\n  }\n\n  return (\n    <>\n      <h2 style={{ marginBottom: 20 }} >Courses</h2>\n      <CourseList courses={courses} deleteCourse={deleteCourse} />\n    </>\n  );\n}\n\nexport default CoursesPage;\n","import { handleResponse, handleError } from \"./apiUtils\";\nconst baseUrl = process.env.REACT_APP_API_URL + \"/authors.json\";\n\nexport function getAuthors() {\n  return fetch(baseUrl)\n    .then(handleResponse)\n    .catch(handleError);\n}\n\nexport function saveAuthor(author) {\n  return fetch(baseUrl + (author.id || \"\"), {\n    method: author.id ? \"PUT\" : \"POST\", // POST for create, PUT to update when id already exists.\n    headers: { \"content-type\": \"application/json\" },\n    body: JSON.stringify(author)\n  })\n    .then(handleResponse)\n    .catch(handleError);\n}\n\nexport function deleteAuthor(authorId) {\n  return fetch(baseUrl + authorId, { method: \"DELETE\" })\n    .then(handleResponse)\n    .catch(handleError);\n}\n","import React, { useState, useEffect } from \"react\";\nimport { getAuthors } from '../api/authorApi'\n\nconst AuthorPage = () => {\n\n    const [authors, setAuthors] = useState([]);\n\n\n    useEffect(() => {\n        getAuthors().then((data) => {\n            setAuthors(data);\n        });\n      }, []);\n\n\n    return (\n        <>\n          <h2 style={{ marginBottom: 20 }}>Authors</h2>\n          <table className=\"table\">\n            <thead>\n                <tr>\n                <th>ID</th>\n                <th>Name</th>\n                </tr>\n            </thead>\n            <tbody>\n                {authors.map(a => {\n                return (\n                    <tr key={a.id}>\n                    <td>{a.id}</td>\n                    <td>{a.name}</td>\n                    </tr>\n                );\n                })}\n            </tbody>\n            </table>\n        </>\n    );\n}\n\nexport default AuthorPage;\n","import React from \"react\";\nimport Header from \"./common/Header\";\nimport CoursesPage from \"./CoursesPage\";\nimport AuthorPage from './AuthorPage'\nimport { Route, Switch } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nfunction App() {\n  return (\n    <div className=\"container-fluid\">\n      <ToastContainer autoClose={3000} hideProgressBar />\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact component={CoursesPage} />\n        <Route path=\"/courses\" component={CoursesPage} />\n        <Route path=\"/authors\" component={AuthorPage} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React from \"react\";\nimport { render } from \"react-dom\";\nimport App from \"./components/App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nrender(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}